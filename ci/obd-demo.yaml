apiVersion: apps/v1
kind: Deployment
metadata:
  name: cartservice-v1
  labels:
    app.kubernetes.io/name: cartservice
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: cartservice
  template:
    metadata:
      labels:
        app.kubernetes.io/name: cartservice
    spec:
      terminationGracePeriodSeconds: 5
      containers:
        - name: server
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - all
            privileged: false
            readOnlyRootFilesystem: true
          image: kurtosistech/cartservice:main
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8090
          readinessProbe:
            httpGet:
              path: /health
              port: 8090
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
            successThreshold: 1
          livenessProbe:
            httpGet:
              path: /health
              port: 8090
            initialDelaySeconds: 15
            periodSeconds: 20
            timeoutSeconds: 5
            failureThreshold: 3
          env:
            - name: PORT
              value: "8090"
            - name: DB_USERNAME
              value: "postgresuser"
            - name: DB_PASSWORD
              value: "postgrespass"
            - name: DB_HOST
              value: "postgres"
            - name: DB_PORT
              value: "5432"
            - name: DB_NAME
              value: "cart"
---
apiVersion: v1
kind: Service
metadata:
  name: cartservice
  labels:
    app.kubernetes.io/name: cartservice
  annotations:
    kardinal.dev.service/dependencies: "postgres:tcp"
spec:
  type: ClusterIP
  selector:
    app.kubernetes.io/name: cartservice
  ports:
    - name: http
      port: 8090
      targetPort: 8090
      protocol: TCP
      appProtocol: HTTP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend-v1
  labels:
    app.kubernetes.io/name: frontend
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: frontend
  template:
    metadata:
      labels:
        app.kubernetes.io/name: frontend
      annotations:
        sidecar.istio.io/rewriteAppHTTPProbers: "true"
    spec:
      containers:
        - name: server
          image: kurtosistech/frontend:main
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8080
          readinessProbe:
            initialDelaySeconds: 10
            httpGet:
              path: "/_healthz"
              port: 8080
              httpHeaders:
                - name: "Cookie"
                  value: "shop_session-id=x-readiness-probe"
          livenessProbe:
            initialDelaySeconds: 10
            httpGet:
              path: "/_healthz"
              port: 8080
              httpHeaders:
                - name: "Cookie"
                  value: "shop_session-id=x-liveness-probe"
          env:
            - name: ADDRESS
              value: ":8080"
            - name: FREECURRENCYAPIKEY
              value: "fca_live_nFVVF8CvfxqJhzMHB4N2x1NH7ffVVPwZr9hg3iNl"
            - name: CARTSERVICEHOST
              value: cartservice
            - name: PRODUCTCATALOGSERVICEHOST
              value: productcatalogservice

---
apiVersion: v1
kind: Service
metadata:
  name: frontend
  labels:
    app.kubernetes.io/name: frontend
  annotations:
    kardinal.dev.service/dependencies: "productcatalogservice:http,cartservice:http"
    kardinal.dev.service/plugins: "jsdelivr-api"
spec:
  type: ClusterIP
  selector:
    app.kubernetes.io/name: frontend
  ports:
    - name: http
      port: 80
      protocol: TCP
      appProtocol: HTTP
      targetPort: 8080

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres-v1
  labels:
    app.kubernetes.io/name: postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: postgres
  template:
    metadata:
      labels:
        app.kubernetes.io/name: postgres
    spec:
      containers:
        - name: postgres
          image: "postgres:14"
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 5432
          env:
            - name: POSTGRES_DB
              value: "cart"
            - name: POSTGRES_USER
              value: "postgresuser"
            - name: POSTGRES_PASSWORD
              value: "postgrespass"
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: postgres-data
      volumes:
        - name: postgres-data
          emptyDir: {}

---
apiVersion: v1
kind: Service
metadata:
  name: postgres
  labels:
    app.kubernetes.io/name: postgres
  annotations:
    kardinal.dev.service/stateful: "true"
    kardinal.dev.service/plugins: "postgres-seed-plugin"

spec:
  type: ClusterIP
  ports:
    - name: tcp
      port: 5432
      targetPort: 5432
      protocol: TCP
  selector:
    app.kubernetes.io/name: postgres

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: productcatalogservice-v1
  labels:
    app.kubernetes.io/name: productcatalogservice
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: productcatalogservice
  template:
    metadata:
      labels:
        app.kubernetes.io/name: productcatalogservice
    spec:
      terminationGracePeriodSeconds: 5
      containers:
        - name: server
          image: kurtosistech/productcatalogservice:main
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8070
          readinessProbe:
            httpGet:
              path: /health
              port: 8070
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
            successThreshold: 1
          livenessProbe:
            httpGet:
              path: /health
              port: 8070
            initialDelaySeconds: 15
            periodSeconds: 20
            timeoutSeconds: 5
            failureThreshold: 3
          env:
            - name: PORT
              value: "8070"
---
apiVersion: v1
kind: Service
metadata:
  name: productcatalogservice
  labels:
    app.kubernetes.io/name: productcatalogservice
spec:
  type: ClusterIP
  selector:
    app.kubernetes.io/name: productcatalogservice
  ports:
    - name: http
      port: 8070
      targetPort: 8070
      protocol: TCP
      appProtocol: HTTP

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    kardinal.dev.service/ingress: "true"
  name: ingress
spec:
  ingressClassName: nginx
  rules:
    - host: web.other.localhost
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: frontend
                port:
                  number: 80
---
apiVersion: gateway.networking.k8s.io/v1
kind: Gateway
metadata:
  name: gateway
  annotations:
    kardinal.dev.service/gateway: "true"
spec:
  gatewayClassName: istio
  listeners:
    - name: default
      hostname: "*.app.localhost"
      port: 8888
      protocol: HTTP
      allowedRoutes:
        namespaces:
          from: All

---
apiVersion: gateway.networking.k8s.io/v1
kind: HTTPRoute
metadata:
  name: http
  annotations:
    kardinal.dev.service/route: "true"
spec:
  parentRefs:
    - name: gateway
  hostnames: ["baseline.app.localhost"]
  rules:
    - matches:
        - path:
            type: PathPrefix
            value: /
      backendRefs:
        - name: frontend
          port: 80
